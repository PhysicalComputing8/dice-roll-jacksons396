<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="{#ns!PXqU6x)e%w?++xs">roll</variable></variables><block type="pxt-on-start" id="BOX$QNdL)Pfz}oLh{/Bp" x="0" y="0"><comment pinned="true" h="93" w="287">Code added here will run once when the program starts</comment><statement name="HANDLER"><block type="device_print_message" id="LWZ2x?%3+;:[*%@sWB-V"><value name="text"><shadow type="text" id="fi+odEoitEJbqH(hMSLn"><field name="TEXT">Shake to roll the dice</field></shadow></value></block></statement></block><block type="device_gesture_event" id="qubz:O8gZ!+kNU-#[/R9" x="35" y="261"><field name="NAME">Gesture.Shake</field><statement name="HANDLER"><block type="variables_set" id="VLkU-%zF_~^$Cc{(U}qD"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field><comment pinned="false" h="147" w="281">A variable is a place where your program can store a value. We need a place to store the result of the roll, so I created a variable called roll.</comment><value name="VALUE"><shadow type="math_number" id="u.Y54FS8*zQb4~gzK$[l"><field name="NUM">0</field></shadow><block type="device_random" id="!2N3J4OKr*#RVhIOP#oT"><comment pinned="false" h="149" w="277"> I have the program generate a random number between 1 and 6, and I assign that value to the roll variable</comment><value name="min"><shadow type="math_number" id="OkBZ{@$n1|k?W?$u7pG!"><field name="NUM">1</field></shadow></value><value name="limit"><shadow type="math_number" id="l~WbV:(..KNR[!v28|mo"><field name="NUM">6</field></shadow></value></block></value><next><block type="controls_if" id=".45F9}[W[?!_,|T$^}$H"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean" id="`-On1q[!cpHJRd,KtZ5~"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="`9=cc+_t:B:00m0+66Es"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id=";+xC-)zwS~Z5-0~Ov;}="><field name="NUM">0</field></shadow><block type="variables_get" id="4)NF;FF2PK5?4DX}i(RA"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="i~mxsi;.yoR|b#Rn7+z4"><field name="NUM">1</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id=")G#RM_{XI28WcApjb)Yx"><field name="LEDS">`&#10;        . . . . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . . . .&#10;        `</field></block></statement><statement name="ELSE"><block type="controls_if" id="]u=@s4b/zl^R-_EYB`z7"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean" id="R|3,YvwjxLQ/@:lO/F:9"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="wUXHFluYrVw8eUJe^pSD"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="87GrT#os]Lp%)^z-75H:"><field name="NUM">0</field></shadow><block type="variables_get" id="y6jzdm#d$}LZkT:(=YQ+"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="GAz0KTJy#ZACiY{k1Hrq"><field name="NUM">2</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id="BcB*.:`knECYr(:$-SU|"><field name="LEDS">`&#10;        . . . . . &#10;        . # . . . &#10;        . . . . . &#10;        . . . # . &#10;        . . . . .&#10;        `</field></block></statement><statement name="ELSE"><block type="controls_if" id="=HPT{W2}H_/z`p3HDOXo"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean" id="w-D@;Y!zas0ui3XCE})#"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="OCWm[c7.TJ=:6u]^X4|p"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="?52#};8fSZmt;2^{-Gil"><field name="NUM">0</field></shadow><block type="variables_get" id="oH[XMchNJ+$J_!):|N,r"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="dsaU{?]i*f-0_f|~Wl;V"><field name="NUM">3</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id="V4Vn}A=Df}tXp@3AXOU?"><field name="LEDS">`&#10;        # . . . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="controls_if" id="{Ye:Ybs6]3IHoY+(HFf*"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean" id="LEv7?f[An1Xx07cFrSd/"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="Iw`3|+(,F35/NVTF^twz"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="{YEc+eEj3:SNod,`Pk/3"><field name="NUM">0</field></shadow><block type="variables_get" id="@:V#{c8i:gS],,{5-a8R"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id=",#I..K}DWk1OWP/;|mh="><field name="NUM">4</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id=":6|,At=V#97cga=r}i:^"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . . . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="controls_if" id="rH%FGNzx,|SZ`aq2/#dF"><mutation else="1"/><value name="IF0"><shadow type="logic_boolean" id="Y/T_i-(RS`ZLH/)tn1oQ"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="(x.X;]k(J|I%w.uc|+75"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="Ul1m0h}f1fVhOE4gajY["><field name="NUM">0</field></shadow><block type="variables_get" id="-/lGw*#JZb^bS#n?Zpc="><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="#vaWOkm4Xz[VboCLrG;z"><field name="NUM">5</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id="3GeVr}S=H36aZ5cVS0HE"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="device_show_leds" id="[Q:jMT28|UCUYH#.6t8p"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        # . . . # &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement></block></statement></block></statement></block></statement></block></statement></block></next></block></statement></block></xml>